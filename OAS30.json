{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "Contacts API",
    "description" : "An API for keeping track of your contacts and the companies they work for.",
    "contact" : { },
    "version" : "2.0.0"
  },
  "servers" : [ {
    "url" : "https://ohvnaf9.us.api-mocks.com",
    "description" : "This is your API mock endpoint. When called, it will simulate the behavior of your API."
  } ],
  "paths" : {
    "/contacts/" : {
      "get" : {
        "tags" : [ "Contacts", "supported", "private" ],
        "summary" : "Get the list of Contacts",
        "description" : "Loads a list of Contact test",
        "parameters" : [ {
          "$ref" : "#/components/parameters/%24size"
        }, {
          "$ref" : "#/components/parameters/%24page"
        }, {
          "$ref" : "#/components/parameters/%24sort"
        }, {
          "name" : "firstName",
          "in" : "query",
          "description" : "Allows to filter the collection of results by the value of field `firstName`",
          "schema" : {
            "type" : "string",
            "description" : "Allows to filter the collection of results by the value of field `firstName`"
          },
          "example" : "John"
        }, {
          "name" : "lastName",
          "in" : "query",
          "description" : "Allows to filter the collection of results by the value of field `lastName`",
          "schema" : {
            "type" : "string",
            "description" : "Allows to filter the collection of results by the value of field `lastName`"
          },
          "example" : "Doe"
        }, {
          "name" : "active",
          "in" : "query",
          "description" : "Allows to filter the collection of results by the value of field `active`",
          "schema" : {
            "type" : "boolean",
            "description" : "Allows to filter the collection of results by the value of field `active`"
          },
          "example" : true
        }, {
          "name" : "company",
          "in" : "query",
          "description" : "Allows to filter the collection of results by the value of field `company`",
          "schema" : {
            "type" : "string",
            "description" : "Allows to filter the collection of results by the value of field `company`"
          },
          "example" : "0e8c9fb0-ad98-11e6-bf2e-47644ada7c0f"
        } ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "headers" : {
              "X-Page-Count" : {
                "$ref" : "#/components/headers/X-Page-Count"
              },
              "X-Page-Number" : {
                "$ref" : "#/components/headers/X-Page-Number"
              },
              "X-Page-Size" : {
                "$ref" : "#/components/headers/X-Page-Size"
              },
              "X-Total-Count" : {
                "$ref" : "#/components/headers/X-Total-Count"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Contact"
                  }
                },
                "example" : "[{\n  \"id\": \"0e8dd830-ad98-11e6-bf2e-47644ada7c0f\",\n  \"firstName\": \"John\",\n  \"lastName\": \"Smith\",\n  \"birthday\": 152755200000,\n  \"active\": true,\n  \"rank\": 1,\n  \"company\": \"0e8cedd0-ad98-11e6-bf2e-47644ada7c0f\"\n}]"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/Status%20400"
          }
        },
        "security" : [ { }, {
          "HTTP_BASIC" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "Contacts" ],
        "summary" : "Create a Contact",
        "description" : "Adds a Contact",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Contact"
              },
              "example" : "{\n  \"firstName\": \"John\",\n  \"lastName\": \"Smith\",\n  \"birthday\": 152755200000,\n  \"active\": true,\n  \"rank\": 1,\n  \"company\": \"0e8cedd0-ad98-11e6-bf2e-47644ada7c0f\"\n}"
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Contact"
                },
                "example" : "{\n  \"id\": \"0e8dd830-ad98-11e6-bf2e-47644ada7c0f\",\n  \"firstName\": \"John\",\n  \"lastName\": \"Smith\",\n  \"birthday\": 152755200000,\n  \"active\": true,\n  \"rank\": 1,\n  \"company\": \"0e8cedd0-ad98-11e6-bf2e-47644ada7c0f\"\n}"
              }
            }
          }
        },
        "security" : [ {
          "HTTP_BASIC" : [ ]
        } ]
      },
      "x-talend" : {
        "section" : "Contacts"
      }
    },
    "/contacts/{contactid}" : {
      "get" : {
        "tags" : [ "Contacts" ],
        "summary" : "Load a Contact",
        "description" : "Loads a Contact",
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Contact"
                },
                "example" : "{\n  \"id\": \"0e8dd830-ad98-11e6-bf2e-47644ada7c0f\",\n  \"firstName\": \"John\",\n  \"lastName\": \"Smith\",\n  \"birthday\": 152755200000,\n  \"active\": true,\n  \"rank\": 1,\n  \"company\": \"0e8cedd0-ad98-11e6-bf2e-47644ada7c0f\"\n}"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/Status%20400"
          }
        }
      },
      "put" : {
        "tags" : [ "Contacts" ],
        "summary" : "Update a Contact",
        "description" : "Updates a Contact",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Contact"
              },
              "example" : "{\n  \"firstName\": \"John\",\n  \"lastName\": \"Smith\",\n  \"birthday\": 152755200000,\n  \"active\": true,\n  \"rank\": 1,\n  \"company\": \"0e8cedd0-ad98-11e6-bf2e-47644ada7c0f\"\n}"
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Contact"
                },
                "example" : "{\n  \"id\": \"0e8dd830-ad98-11e6-bf2e-47644ada7c0f\",\n  \"firstName\": \"John\",\n  \"lastName\": \"Smith\",\n  \"birthday\": 152755200000,\n  \"active\": true,\n  \"rank\": 1,\n  \"company\": \"0e8cedd0-ad98-11e6-bf2e-47644ada7c0f\"\n}"
              }
            }
          }
        },
        "security" : [ {
          "HTTP_BASIC" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "Contacts" ],
        "summary" : "Delete a Contact",
        "description" : "Deletes a Contact",
        "responses" : {
          "200" : {
            "description" : "Status 200"
          }
        },
        "security" : [ {
          "HTTP_BASIC" : [ ]
        } ]
      },
      "parameters" : [ {
        "$ref" : "#/components/parameters/contactid"
      } ],
      "x-talend" : {
        "section" : "Contacts"
      }
    },
    "/companies/" : {
      "get" : {
        "tags" : [ "Companies" ],
        "summary" : "Load the list of Companies",
        "description" : "Loads a list of Company",
        "parameters" : [ {
          "$ref" : "#/components/parameters/%24size"
        }, {
          "$ref" : "#/components/parameters/%24page"
        }, {
          "$ref" : "#/components/parameters/%24sort"
        }, {
          "name" : "name",
          "in" : "query",
          "description" : "Allows to filter the collection of results by the value of field `name`",
          "schema" : {
            "type" : "string",
            "description" : "Allows to filter the collection of results by the value of field `name`"
          },
          "example" : "George Street Brewery"
        } ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "headers" : {
              "X-Page-Count" : {
                "$ref" : "#/components/headers/X-Page-Count"
              },
              "X-Page-Number" : {
                "$ref" : "#/components/headers/X-Page-Number"
              },
              "X-Page-Size" : {
                "$ref" : "#/components/headers/X-Page-Size"
              },
              "X-Total-Count" : {
                "$ref" : "#/components/headers/X-Total-Count"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Company"
                  }
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/Status%20400"
          }
        }
      },
      "post" : {
        "tags" : [ "Companies" ],
        "summary" : "Create a new Company",
        "description" : "Adds a Company",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Company"
              },
              "example" : "{\n  \"name\": \"George Street Brewery\",\n  \"address\":{\n    \"street\": \"2 place de la Defense\",\n    \"zipcode\": \"92053\",\n    \"city\": \"Paris\"\n  },\n  \"tags\":[\n    \"brewery\",\n    \"beer\",\n    \"ale\"\n  ]\n}"
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Company"
                },
                "example" : "{\n  \"id\": \"0e8cedd0-ad98-11e6-bf2e-47644ada7c0f\",\n  \"name\": \"George Street Brewery\",\n  \"address\":{\n    \"street\": \"2 place de la Defense\",\n    \"zipcode\": \"92053\",\n    \"city\": \"Paris\"\n  },\n  \"tags\":[\n    \"brewery\",\n    \"beer\",\n    \"ale\"\n  ]\n}"
              }
            }
          }
        },
        "security" : [ {
          "HTTP_BASIC" : [ ]
        } ]
      },
      "x-talend" : {
        "section" : "Companies"
      }
    },
    "/companies/{companyid}" : {
      "get" : {
        "tags" : [ "Companies" ],
        "summary" : "Load a Company",
        "description" : "Loads a Company",
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Company"
                },
                "example" : "{\n  \"id\": \"0e8cedd0-ad98-11e6-bf2e-47644ada7c0f\",\n  \"name\": \"George Street Brewery\",\n  \"address\":{\n    \"street\": \"2 place de la Defense\",\n    \"zipcode\": \"92053\",\n    \"city\": \"Paris\"\n  },\n  \"tags\":[\n    \"brewery\",\n    \"beer\",\n    \"ale\"\n  ]\n}"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/Status%20400"
          }
        }
      },
      "put" : {
        "tags" : [ "Companies" ],
        "summary" : "Update a Company",
        "description" : "Updates a Company",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Company"
              },
              "example" : "{\n  \"name\": \"George Street Brewery\",\n  \"address\":{\n    \"street\": \"2 place de la Defense\",\n    \"zipcode\": \"92053\",\n    \"city\": \"Paris\"\n  },\n  \"tags\":[\n    \"brewery\",\n    \"beer\",\n    \"ale\"\n  ]\n}"
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Company"
                },
                "example" : "{\n  \"id\": \"0e8cedd0-ad98-11e6-bf2e-47644ada7c0f\",\n  \"name\": \"George Street Brewery\",\n  \"address\":{\n    \"street\": \"2 place de la Defense\",\n    \"zipcode\": \"92053\",\n    \"city\": \"Paris\"\n  },\n  \"tags\":[\n    \"brewery\",\n    \"beer\",\n    \"ale\"\n  ]\n}"
              }
            }
          }
        },
        "security" : [ {
          "HTTP_BASIC" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "Companies" ],
        "summary" : "Delete a Company",
        "description" : "Deletes a Company",
        "responses" : {
          "200" : {
            "description" : "Status 200"
          }
        },
        "security" : [ {
          "HTTP_BASIC" : [ ]
        } ]
      },
      "parameters" : [ {
        "$ref" : "#/components/parameters/companyid"
      } ],
      "x-talend" : {
        "section" : "Companies"
      }
    }
  },
  "components" : {
    "schemas" : {
      "Error" : {
        "type" : "object",
        "required" : [ "code" ],
        "description" : "This general error structure is used throughout this API.",
        "properties" : {
          "code" : {
            "type" : "integer",
            "minimum" : 400,
            "maximum" : 599
          },
          "description" : {
            "type" : "string",
            "example" : "Bad query parameter [$size]: Invalid integer value [abc]"
          },
          "reasonPhrase" : {
            "type" : "string",
            "example" : "Bad Request"
          }
        },
        "example" : "{\n  \"code\": 400,\n  \"description\": \"Bad query parameter [$size]: Invalid integer value [abc]\",\n  \"reasonPhrase\": \"Bad Request\"\n}",
        "x-talend" : {
          "section" : "General"
        }
      },
      "Contact" : {
        "type" : "object",
        "required" : [ "firstName", "id", "lastName" ],
        "description" : "The dataType of a Contact",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "Auto-generated primary key field",
            "example" : "0e8ffb10-ad98-11e6-bf2e-47644ada7c0f"
          },
          "firstName" : {
            "type" : "string",
            "example" : "Kurt"
          },
          "lastName" : {
            "type" : "string",
            "example" : "Williams"
          },
          "birthday" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Birthday as unix timestamp (in ms)",
            "example" : 173664000000
          },
          "active" : {
            "type" : "boolean",
            "default" : true
          },
          "rank" : {
            "type" : "integer",
            "format" : "int32",
            "minimum" : 1,
            "example" : 1
          },
          "company" : {
            "type" : "string",
            "description" : "This property is a reference to a Company",
            "example" : "0e8c9fb0-ad98-11e6-bf2e-47644ada7c0f"
          }
        },
        "example" : "{\n  \"id\": \"0e8dd830-ad98-11e6-bf2e-47644ada7c0f\",\n  \"firstName\": \"John\",\n  \"lastName\": \"Smith\",\n  \"birthday\": 152755200000,\n  \"active\": true,\n  \"rank\": 1,\n  \"company\": \"0e8cedd0-ad98-11e6-bf2e-47644ada7c0f\"\n}",
        "x-talend" : {
          "section" : "Contacts"
        }
      },
      "Company" : {
        "type" : "object",
        "required" : [ "address", "id", "name" ],
        "description" : "The dataType of a Company",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "Auto-generated primary key field",
            "example" : "ewkfbweifjewfijbwei"
          },
          "name" : {
            "type" : "string"
          },
          "tags" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "pattern" : "[a-zA-Z]+"
            },
            "example" : "[\"brewery\", \"beer\", \"ale\"]"
          },
          "address" : {
            "type" : "object",
            "required" : [ "city", "street", "zipcode" ],
            "properties" : {
              "street" : {
                "type" : "string"
              },
              "city" : {
                "type" : "string"
              },
              "zipcode" : {
                "type" : "string",
                "pattern" : "[0-9]*"
              }
            }
          }
        },
        "x-talend" : {
          "section" : "Companies"
        }
      }
    },
    "responses" : {
      "Status 400" : {
        "description" : "Status 400",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/Error"
            }
          }
        }
      }
    },
    "parameters" : {
      "$size" : {
        "name" : "$size",
        "in" : "query",
        "description" : "Size of the page to retrieve.",
        "schema" : {
          "type" : "integer",
          "description" : "Size of the page to retrieve."
        },
        "example" : 10
      },
      "$page" : {
        "name" : "$page",
        "in" : "query",
        "description" : "Number of the page to retrieve.",
        "schema" : {
          "type" : "integer",
          "description" : "Number of the page to retrieve."
        },
        "example" : 1
      },
      "$sort" : {
        "name" : "$sort",
        "in" : "query",
        "description" : "Order in which to retrieve the results. Multiple sort criteria can be passed.",
        "schema" : {
          "type" : "string",
          "description" : "Order in which to retrieve the results. Multiple sort criteria can be passed."
        },
        "example" : "birthday DESC"
      },
      "X-Page-Count" : {
        "name" : "X-Page-Count",
        "in" : "header",
        "schema" : {
          "type" : "integer"
        },
        "example" : 1
      },
      "X-Page-Number" : {
        "name" : "X-Page-Number",
        "in" : "header",
        "schema" : {
          "type" : "integer"
        },
        "example" : 1
      },
      "X-Page-Size" : {
        "name" : "X-Page-Size",
        "in" : "header",
        "schema" : {
          "type" : "integer"
        },
        "example" : 25
      },
      "X-Total-Count" : {
        "name" : "X-Total-Count",
        "in" : "header",
        "schema" : {
          "type" : "integer"
        },
        "example" : 2
      },
      "contactid" : {
        "name" : "contactid",
        "in" : "path",
        "required" : true,
        "description" : "Identifier of the Contact",
        "schema" : {
          "type" : "string",
          "description" : "Identifier of the Contact"
        },
        "example" : "0e8dd830-ad98-11e6-bf2e-47644ada7c0f"
      },
      "companyid" : {
        "name" : "companyid",
        "in" : "path",
        "required" : true,
        "description" : "Identifier of the Company",
        "schema" : {
          "type" : "string",
          "description" : "Identifier of the Company"
        },
        "example" : "0e8c9fb0-ad98-11e6-bf2e-47644ada7c0f"
      }
    },
    "headers" : {
      "X-Page-Count" : {
        "schema" : {
          "type" : "integer"
        },
        "example" : 1
      },
      "X-Page-Number" : {
        "schema" : {
          "type" : "integer"
        },
        "example" : 1
      },
      "X-Page-Size" : {
        "schema" : {
          "type" : "integer"
        },
        "example" : 25
      },
      "X-Total-Count" : {
        "schema" : {
          "type" : "integer"
        },
        "example" : 2
      }
    },
    "securitySchemes" : {
      "HTTP_BASIC" : {
        "type" : "http",
        "scheme" : "basic",
        "description" : "All GET methods are public, meaning that *you can read all the data*. Write operations require authentication and therefore are forbidden to the general public."
      }
    }
  },
  "x-talend" : {
    "sections" : {
      "General" : { },
      "Contacts" : {
        "description" : ""
      },
      "Companies" : { }
    },
    "texts" : {
      "672a7748-e9e3-45f9-96f5-3599aaf007d0" : {
        "title" : "Authentication",
        "content" : "This API is secured using Basic Authentication.\n\nAll **read operations are open** and don't require authentication. However, all **write operations require authentication**.",
        "section" : "General"
      },
      "e5ee73cf-279f-4292-a68f-b219f5bf5a49" : {
        "title" : "Error handling",
        "content" : "This API uses standard HTTP status codes to indicate the status of a response.\n\nThere are two main categories of error responses. Each have a different response payload structure.\n\n* Simple errors\n* Detailed errors\n\n\n# Simple errors\n\n| Name | Code | Description |\n| -------- | -------- | -------- |\n| Bad request     | 400     | The request was unacceptable     |\n| Unauthorized     | 401     | The request has not been applied because it lacks valid authentication credentials for the target resource.     |\n| Forbidden     | 403     | The server understood the request, but is refusing to fulfill it     |\n| Not Found     | 404     | The server has not found anything matching the request URI     |\n| Not acceptable     | 406     | The server is unable to return a response in the format that was requested by the client     |\n| Unsupported Media Type     | 415     | The server is refusing to service the request because the entity of the request is in a format not supported by the requested resource for the requested method     |\n| Too many requests     | 429     | Too many requests hit the API too quickly     |\n| Server error     | 500     | A technical error occured  |\n\n\n\n\n\n\n# Detailed errors\n| Name | Code | Description |\n| -------- | -------- | -------- |\n| Unprocessable entity     | 422     | The server understands the content type of the request entity, and the syntax of the request entity is correct, but was unable to process the contained instructions.     |\n\n\n\n\n",
        "section" : "General"
      },
      "b13b9fad-34c7-444f-9da0-6a8b9791be47" : {
        "title" : "How to",
        "content" : "svkvmsdkmvsdlkm",
        "section" : "General"
      }
    }
  }
}